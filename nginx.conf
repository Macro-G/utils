
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    upstream myservers{
        #分权 即访问131与134的次数比例为1比1
        server 192.168.217.130:7080 weight=1;
        server 192.168.217.130:8080 weight=1;
        server 192.168.217.130:9080 weight=1;
    }

    #weight策略
    #upstream myservers1{
     #   server 172.17.5.26:7080 weight=1;
      #  #backup 备份机，所有服务器挂了之后才会生效
       # server 172.17.5.26:8080 backup;
        #server 172.17.5.26:9080 weight=1;
    #}

    #ip_hash策略
    upstream myservers1{
        ip_hash;
        server 172.17.5.26:7080 weight=1;
        #backup 备份机，所有服务器挂了之后才会生效
        server 172.17.5.26:8080 down;
        server 172.17.5.26:9080 weight=1;
    }

    server {
        listen       8000;
        server_name  172.17.5.26;
        location / {
           # root   /usr/local/src/qianduancode;
            root   /usr/local/src/dist;
            index  index.html index.htm;
        }

        location /fxsb {
            proxy_set_header Host $host:8000;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           # 虚拟机环境集群
           # proxy_pass http://myservers1/fxsb;
           # 虚拟机环境单机
           # proxy_pass http://172.17.5.26:7080/fxsb;
           # 本地环境
           # proxy_pass http://172.17.5.90:8080/fxsb;
           # 大数据环境
            proxy_pass http://172.16.10.53:7080/fxsb;
           # wangwenqian
           # proxy_pass http://172.17.5.184:8080/fxsb;
           # 反向代理
           # proxy_pass http://172.17.5.26:7080/fxsb;
        }
    }

    server {
        listen       80;
        server_name  localhost;
        #server_name  192.168.217.130;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #前缀匹配
        location ^~ /fxsb {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://myservers/fxsb;
        }

        #精确匹配
        location = /test1 {
            proxy_pass http://myservers/;
            #rewrite ^ http://myservers;
        }

        #前缀匹配
        location ^~ /test2 {
            proxy_pass http://myservers/;
            #rewrite ^ http://myservers;
        }
         
        #正则匹配 注意：测试不行
        location ~ /test3[0-9] {
            proxy_pass http://myservers;
            #rewrite ^ http://myservers;
        }

        #正则匹配（不区分大小写）注意：测试不行
        location ^~ /test4[0-9] {
            proxy_pass http://myservers;
            #rewrite ^ http://myservers;
        }

        #正常匹配
        location /test9 {
            proxy_pass http://myservers/;
            #rewrite ^ http://myservers;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
